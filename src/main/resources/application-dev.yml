server:
  port: 8080
  servlet:
    context-path: /demo

spring:
  datasource:
    db1:
      username: root
      password: 123456
#      driver-class-name: com.mysql.cj.jdbc.Driver
      url: jdbc:mysql://127.0.0.1:3306/demo?characterEncoding=UTF-8&useUnicode=true&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Shanghai
    db2:
      username: root
      password: 123456
#      driver-class-name: com.mysql.cj.jdbc.Driver
      url: jdbc:mysql://127.0.0.1:3306/demo_slave?characterEncoding=UTF-8&useUnicode=true&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Shanghai

mybatis-plus:
  # 如果是放在src/main/java目录下 classpath:/com/yourpackage/*/mapper/*Mapper.xml
  # 如果是放在resource目录 classpath:/mapper/*Mapper.xml
  mapper-locations: classpath*:com/example/springbootdemo/persistence/**/mapper/*Mapper.xml
  #实体扫描，多个package用逗号或者分号分隔，通过该属性可以给包中的类注册别名，注册后在 Mapper 对应的 XML 文件中可以直接使用类名，而不用使用全限定的类名(即 XML 中调用的时候不用包含包名)
  typeAliasesPackage: com.example.springbootdemo.entity
  global-config:
    db-config:
      #主键类型
      id-type: AUTO
      #表名、是否使用下划线命名，默认数据库表使用下划线命名
      table-underline: false
  configuration:
    #是否开启自动驼峰命名规则（camel case）映射，即从经典数据库列名 A_COLUMN（下划线命名） 到经典 Java 属性名 aColumn（驼峰命名） 的类似映射，自动匹配无需as（没开启这个，SQL需要写as： select user_id as userId）
    map-underscore-to-camel-case: true
    #全局地开启或关闭配置文件中的所有映射器已经配置的任何缓存
    cache-enabled: false
    #配置JdbcTypeForNull, oracle数据库必须配置
    jdbc-type-for-null: 'null'
    #延时加载的开关（true/false）
    lazy-loading-enabled: true
    #开启的话，延时加载一个属性时会加载该对象全部属性，否则按需加载属性（true/false）
    multiple-result-sets-enabled: true